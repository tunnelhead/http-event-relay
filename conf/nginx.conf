pcre_jit on;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  text/plain;

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

        # Log in JSON Format
        # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
        # '"remote_addr": "$remote_addr", '
        #  '"body_bytes_sent": $body_bytes_sent, '
        #  '"request_time": $request_time, '
        #  '"response_status": $status, '
        #  '"request": "$request", '
        #  '"request_method": "$request_method", '
        #  '"host": "$host",'
        #  '"upstream_addr": "$upstream_addr",'
        #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
        #  '"http_referrer": "$http_referer", '
        #  '"http_user_agent": "$http_user_agent", '
        #  '"http_version": "$server_protocol", '
        #  '"nginx_access": true }';
        # access_log /dev/stdout nginxlog_json;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Don't reveal OpenResty version to clients.
    server_tokens off;

    # Set up limits
    client_max_body_size 128k;

    # To resolve docker hosts
    resolver 127.0.0.11 ipv6=off;

    # Lua stuff
    lua_package_path "/usr/local/openresty/lua/?.lua;;";

    init_by_lua_block {
        redis_config = {
            host = os.getenv("REDIS_HOST") or "127.0.0.1",
            port = tonumber(os.getenv("REDIS_PORT") or 6379),
            password = os.getenv("REDIS_PASSWORD"),
            pool_size = tonumber(os.getenv("REDIS_POOL_SIZE") or 100),
            pool_keepalive = tonumber(os.getenv("REDIS_POOL_KEEPALIVE") or 10),
        }
        tunnel_config = {
            token = os.getenv("TUNNEL_ACCESS_TOKEN"),
            sig_secret = os.getenv("TUNNEL_SIGNATURE_SECRET"),
            maxlen = tonumber(os.getenv("TUNNEL_MAXLEN") or 1000),
            enable_backpressure = tonumber(os.getenv("TUNNEL_BACKPRESSURE") or 1) >= 1,
            max_poll_timeout = tonumber(os.getenv("TUNNEL_MAX_POLL_TIMEOUT") or 60),
            def_poll_timeout = tonumber(os.getenv("TUNNEL_DEFAULT_POLL_TIMEOUT") or 30),
            def_content_type = os.getenv("TUNNEL_DEFAULT_CONTENT_TYPE") or "text/plain",
            demo_tunnel_id = os.getenv("TUNNEL_DEMO_ID"),
            reply_ttl = tonumber(os.getenv("TUNNEL_REPLY_TTL") or 3600),
        }
    }

    include /etc/nginx/conf.d/*.conf;
}

env REDIS_HOST;
env REDIS_PORT;
env REDIS_PASSWORD;
env REDIS_POOL_SIZE;
env REDIS_POOL_KEEPALIVE;

env TUNNEL_ACCESS_TOKEN;
env TUNNEL_SIGNATURE_SECRET;
env TUNNEL_MAXLEN;
env TUNNEL_BACKPRESSURE;
env TUNNEL_MAX_POLL_TIMEOUT;
env TUNNEL_DEFAULT_POLL_TIMEOUT;
env TUNNEL_DEFAULT_CONTENT_TYPE;
env TUNNEL_DEMO_ID;
env TUNNEL_REPLY_TTL;
